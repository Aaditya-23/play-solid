/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ARouteRouteImport } from './routes/a/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ASettingsIndexRouteImport } from './routes/a/settings/index'
import { Route as AInboxIndexRouteImport } from './routes/a/inbox/index'

const ARouteRoute = ARouteRouteImport.update({
  id: '/a',
  path: '/a',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ASettingsIndexRoute = ASettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => ARouteRoute,
} as any)
const AInboxIndexRoute = AInboxIndexRouteImport.update({
  id: '/inbox/',
  path: '/inbox/',
  getParentRoute: () => ARouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/a': typeof ARouteRouteWithChildren
  '/a/inbox': typeof AInboxIndexRoute
  '/a/settings': typeof ASettingsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/a': typeof ARouteRouteWithChildren
  '/a/inbox': typeof AInboxIndexRoute
  '/a/settings': typeof ASettingsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/a': typeof ARouteRouteWithChildren
  '/a/inbox/': typeof AInboxIndexRoute
  '/a/settings/': typeof ASettingsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/a' | '/a/inbox' | '/a/settings'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/a' | '/a/inbox' | '/a/settings'
  id: '__root__' | '/' | '/a' | '/a/inbox/' | '/a/settings/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ARouteRoute: typeof ARouteRouteWithChildren
}

declare module '@tanstack/solid-router' {
  interface FileRoutesByPath {
    '/a': {
      id: '/a'
      path: '/a'
      fullPath: '/a'
      preLoaderRoute: typeof ARouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/a/settings/': {
      id: '/a/settings/'
      path: '/settings'
      fullPath: '/a/settings'
      preLoaderRoute: typeof ASettingsIndexRouteImport
      parentRoute: typeof ARouteRoute
    }
    '/a/inbox/': {
      id: '/a/inbox/'
      path: '/inbox'
      fullPath: '/a/inbox'
      preLoaderRoute: typeof AInboxIndexRouteImport
      parentRoute: typeof ARouteRoute
    }
  }
}

interface ARouteRouteChildren {
  AInboxIndexRoute: typeof AInboxIndexRoute
  ASettingsIndexRoute: typeof ASettingsIndexRoute
}

const ARouteRouteChildren: ARouteRouteChildren = {
  AInboxIndexRoute: AInboxIndexRoute,
  ASettingsIndexRoute: ASettingsIndexRoute,
}

const ARouteRouteWithChildren =
  ARouteRoute._addFileChildren(ARouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ARouteRoute: ARouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
